{
  // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "iconfont": {
    "prefix": "icf",
    "scope": "javascript, html, vue-html, react-javascirpt, react-typescript",
    "body": ["<i class=\"iconfont $1\">$2</i>"]
  },
  "todo": {
    "prefix": "todo",
    "scope": "javascript, typescript, vue",
    "body": ["// TODO: $1 <Mujey> ðŸ¦¦"]
  },
  "arrow function": {
    "scope": "javascript,typescript, html, vue",
    "prefix": "af",
    "body": ["($1) => {", "\t$2", "}"]
  },
  "function(){}": {
    "scope": "javascript,typescript, html, vue",
    "prefix": "fun",
    "body": [" function($1){", "\t$2", "}"]
  },
  "Element Tag": {
    "scope": "javascript, typescript, html, vue, plain",
    "prefix": "tag",
    "body": ["<$1></>"]
  },
  "const": {
    "scope": "javascript,typescript,html,vue",
    "prefix": "c",
    "body": ["const"]
  }
}
